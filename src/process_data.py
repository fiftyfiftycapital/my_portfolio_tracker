# src/process_data.py
import re
from datetime import datetime

def load_data(file_path):
    """
    Load data from the specified file path.

    :param file_path: Path to the file containing financial data.
    :return: List of dictionaries with parsed financial information.
    """
    with open(file_path, 'r', encoding='utf-8') as file:
        text = file.read()
    return parse_data(text)

def parse_data(text):
    """
    Parse the text from the financial statements into structured data.

    :param text: String containing the raw financial data.
    :return: List of entries, each entry is a dictionary representing daily financial data.
    """
    entries = []
    for entry in re.split(r'\n\n+', text):
        if entry.strip():
            # Match both Polish and English date formats
            date_pattern = r'(?:Wygenerowane przez|Generated by) Trading 212 UK Ltd. (?:on|o) (\d{1,2} \w+ \d{4})(?: o| at) (\d{2}:\d{2}) \(UTC\).'
            date_match = re.search(date_pattern, entry, re.IGNORECASE)
            if date_match:
                date_str = f"{date_match.group(1)} {date_match.group(2)}"
                date = datetime.strptime(date_str, "%d %B %Y %H:%M").strftime("%Y-%m-%d")
                
                entry_data = {
                    'Date': date,
                    'Deposit': '0.00',
                    'Withdrawal': '0.00',
                    'Realized_P/L': '0.00',
                    'Unrealized_P/L': '0.00',
                    'Dividends': '0.00',
                    'Overnight_Fee': '0.00',
                    'Account_Value': '0.00'
                }
                
                # Extract financial data
                for key, pattern in {
                    'Deposit': r'(?:Wpłat|Deposits) PLN (-?\d+(?:,\d+)?)',
                    'Withdrawal': r'(?:Wypłaty|Withdrawals) PLN (-?\d+(?:,\d+)?)',
                    'Realized_P/L': r'(?:Zrealizowane zyski/straty|Realised P/L) PLN (-?\d+(?:,\d+)?)',
                    'Unrealized_P/L': r'(?:Niezrealizowane zyski i straty|Unrealised P/L) PLN (-?\d+(?:,\d+)?)',
                    'Dividends': r'(?:Dywidendy|Dividends) PLN (-?\d+(?:,\d+)?)',
                    'Overnight_Fee': r'(?:Opłata „overnight” za utrzymanie pozycji|Odsetki „overnight”|Overnight interest) PLN (-?\d+(?:,\d+)?)',
                    'Account_Value': r'(?:Wartość konta ogółem|Account value) PLN (\d+(?:,\d+)?)'
                }.items():
                    match = re.search(pattern, entry)
                    if match:
                        value = match.group(1).replace(',', '.')
                        entry_data[key] = value
                
                entries.append(entry_data)
    return entries