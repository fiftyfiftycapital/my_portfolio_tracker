import fitz  # PyMuPDF
import re
import csv
from datetime import datetime

def extract_text_from_pdf(pdf_path):
    """Extract text from a PDF file."""
    with fitz.open(pdf_path) as pdf_document:
        text = ""
        for page_num in range(len(pdf_document)):
            page = pdf_document.load_page(page_num)
            text += page.get_text()
    return text

def parse_pdf_statement(text):
    """Parse the Trading 212 CFD table from the extracted text."""
    date_pattern = r'Generated by Trading 212 UK Ltd. on (\d{1,2}\s\w+\s\d{4}) at (\d{2}:\d{2}) \(UTC\).'
    data_pattern = r'Deposits\nPLN ([-?\d,\.]+)\nWithdrawals\nPLN ([-?\d,\.]+)\nRealised P/L\nPLN ([-?\d,\.]+)\nUnrealised P/L\nPLN ([-?\d,\.]+)\nDividends\nPLN ([-?\d,\.]+)\nOvernight interest\nPLN ([-?\d,\.]+)\nAccount value\nPLN ([-?\d,\.]+)'

    date_match = re.search(date_pattern, text, re.IGNORECASE)
    data_match = re.search(data_pattern, text, re.IGNORECASE)

    # Debugging information
    print("Extracted Text:\n", text)
    print("Date Match:", date_match)
    print("Data Match:", data_match)

    if date_match and data_match:
        date_str = f"{date_match.group(1)} at {date_match.group(2)} (UTC)"
        
        parsed_data = {
            'Date': date_str,
            'Deposit': data_match.group(1),
            'Withdrawal': data_match.group(2),
            'Realized_P/L': data_match.group(3),
            'Unrealized_P/L': data_match.group(4),
            'Dividends': data_match.group(5),
            'Overnight_Fee': data_match.group(6),
            'Account_Value': data_match.group(7)
        }
        return parsed_data
    return None

def append_data_to_csv(file_path, data):
    """Append parsed data to the CSV file in the same format as existing entries."""
    with open(file_path, 'a', newline='', encoding='utf-8') as csvfile:
        csvfile.write(f"\nGenerated by Trading 212 UK Ltd. on {data['Date']}.\n")
        csvfile.write(f"Deposits PLN {data['Deposit']}\n")
        csvfile.write(f"Withdrawals PLN {data['Withdrawal']}\n")
        csvfile.write(f"Realised P/L PLN {data['Realized_P/L']}\n")
        csvfile.write(f"Unrealised P/L PLN {data['Unrealized_P/L']}\n")
        csvfile.write(f"Dividends PLN {data['Dividends']}\n")
        csvfile.write(f"Overnight interest PLN {data['Overnight_Fee']}\n")
        csvfile.write(f"Account value PLN {data['Account_Value']}\n")

def main():
    #pdf_path = 'data/ActivityStatement5805600-2025-03-06.pdf'
    pdf_path = 'temp/ActivityStatement5805600-2025-04-08.pdf'
    csv_path = 'data/brokerage_data1.csv'
    
    text = extract_text_from_pdf(pdf_path)
    parsed_data = parse_pdf_statement(text)
    
    if parsed_data:
        append_data_to_csv(csv_path, parsed_data)
        print("Data appended to CSV successfully.")
    else:
        print("Failed to parse data from PDF.")

if __name__ == '__main__':
    main()